#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# #################################################################################
#
# installMagicFlute - does what the name says
#
# - chmod and chown for papageno/pap_* to enable wifi monitor mode
# - overwrites pap_* in papageno folder if it already exists, else creates folder
# - adds img files to existing img dir if it already exists, else creates folder
# - leaves existing sqlite db untouched (new db created by app if missing)
# - leaves existing targets.json untouched (default created by app if missing)
# - leaves existing userConfig.json untouched (default created by app if missing)
#
# th.natter@gmail.com
#
# #################################################################################



# http://osxdaily.com/2016/09/27/allow-apps-from-anywhere-macos-gatekeeper/


import os
import subprocess

dir_path = os.path.dirname(os.path.realpath(__file__))
sudo_warning = """
 #     #                        #######
 ##   ##   ##    ####  #  ####  #       #      #    # ##### ######
 # # # #  #  #  #    # # #    # #       #      #    #   #   #
 #  #  # #    # #      # #      #####   #      #    #   #   #####
 #     # ###### #  ### # #      #       #      #    #   #   #
 #     # #    # #    # # #    # #       #      #    #   #   #
 #     # #    #  ####  #  ####  #       ######  ####    #   ######



INSTALLING MagicFlute requires an admin password.


AFTER this script completes there will be ONE MORE THING
courtesy of Apple:

IMPORTANT
=========

RIGHT-CLICK on MagicFlute in the Applications folder,
and select OPEN to start MagicFlute. Then accept that
MagicFlute is from an 'unidentified developer'. That's
how Apple calls people who don't pay an annual fee
for the privilege of being 'identified'.

"""

unsigned_warning = """
-------------

STOP.
Remember the part about RIGHT-CLICK - OPEN? Great.

This is only required the first time you start
MagicFlute. Afterwards it is business as usual.

We hope you find MagicFlute useful.


"""




def copyFiles():
    print('\n*** installMagicFlute started...\n')
    print(sudo_warning)


    # create dirs if they do not already exist

    subprocess.call(["mkdir", os.path.expanduser("~/Library/MagicFlute")])
    subprocess.call(["mkdir", os.path.expanduser("~/Library/MagicFlute/img")])
    subprocess.call(["mkdir", os.path.expanduser("~/Library/MagicFlute/papageno")])


    # delete existing papageno executables in Library/MagicFlute/papageno dir

    subprocess.call(["rm", "-f", os.path.expanduser("~/Library/MagicFlute/papageno/pap_live")])
    subprocess.call(["rm", "-f", os.path.expanduser("~/Library/MagicFlute/papageno/pap_log")])


    # copy papageno executables to Library/MagicFlute/papageno dir

    subprocess.call(["cp", dir_path + "/.pap_live",
                     os.path.expanduser("~/Library/MagicFlute/papageno/pap_live")])
    subprocess.call(["cp", dir_path + "/.pap_live",
                     os.path.expanduser("~/Library/MagicFlute/papageno/pap_log")])


    # change ownership to root

    subprocess.call(["sudo", "chown", "root", os.path.expanduser("~/Library/MagicFlute/papageno/pap_live")])
    subprocess.call(["sudo", "chown", "root", os.path.expanduser("~/Library/MagicFlute/papageno/pap_log")])


    # change setuid for papageno executables

    subprocess.call(["sudo", "chmod", "+s", os.path.expanduser("~/Library/MagicFlute/papageno/pap_live")])
    subprocess.call(["sudo", "chmod", "+s", os.path.expanduser("~/Library/MagicFlute/papageno/pap_log")])


    # copy all img files to Library/MagicFlute/img dir

    subprocess.call(["cp", "-R", dir_path + "/.img/", os.path.expanduser("~/Library/MagicFlute/img")])


    # copy MagicFlute app to app directory after first deleting an existing version



    subprocess.call(["sudo", "rm", "-rf", "/Applications/MagicFlute.app"])
    subprocess.call(["cp", "-R", dir_path + "/.MagicFlute.app", "/Applications/MagicFlute.app"])


    print(unsigned_warning)




def main():
    copyFiles()


if __name__ == "__main__":
    main()
